memberSearchIndex = [{"p":"controller","c":"AppointmentManager","l":"acceptAppointment(Appointment)","u":"acceptAppointment(model.appointments.Appointment)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"acceptAppointment(Appointment)","u":"acceptAppointment(model.appointments.Appointment)"},{"p":"controller.interfaces","c":"IStaffManager","l":"addAdmin(String, int, String, Gender, LocalDate, String, String)","u":"addAdmin(java.lang.String,int,java.lang.String,model.enums.Gender,java.time.LocalDate,java.lang.String,java.lang.String)"},{"p":"controller","c":"StaffManager","l":"addAdmin(String, int, String, Gender, LocalDate, String, String)","u":"addAdmin(java.lang.String,int,java.lang.String,model.enums.Gender,java.time.LocalDate,java.lang.String,java.lang.String)"},{"p":"controller.interfaces","c":"IStaffManager","l":"addDoctor(String, int, String, Gender, LocalDate, String, String, Specialisation)","u":"addDoctor(java.lang.String,int,java.lang.String,model.enums.Gender,java.time.LocalDate,java.lang.String,java.lang.String,model.enums.Specialisation)"},{"p":"controller","c":"StaffManager","l":"addDoctor(String, int, String, Gender, LocalDate, String, String, Specialisation)","u":"addDoctor(java.lang.String,int,java.lang.String,model.enums.Gender,java.time.LocalDate,java.lang.String,java.lang.String,model.enums.Specialisation)"},{"p":"controller.interfaces","c":"IStaffManager","l":"addPharmacist(String, int, String, Gender, LocalDate, String, String)","u":"addPharmacist(java.lang.String,int,java.lang.String,model.enums.Gender,java.time.LocalDate,java.lang.String,java.lang.String)"},{"p":"controller","c":"StaffManager","l":"addPharmacist(String, int, String, Gender, LocalDate, String, String)","u":"addPharmacist(java.lang.String,int,java.lang.String,model.enums.Gender,java.time.LocalDate,java.lang.String,java.lang.String)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"addStock(InventoryItem, int)","u":"addStock(model.inventory.InventoryItem,int)"},{"p":"controller","c":"InventoryManager","l":"addStock(InventoryItem, int)","u":"addStock(model.inventory.InventoryItem,int)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"addStock(String, int)","u":"addStock(java.lang.String,int)"},{"p":"controller","c":"InventoryManager","l":"addStock(String, int)","u":"addStock(java.lang.String,int)"},{"p":"controller","c":"AppointmentManager","l":"AppointmentManager(IAppointmentRepository)","u":"%3Cinit%3E(repository.interfaces.IAppointmentRepository)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"approveReplenishmentRequest(InventoryItem)","u":"approveReplenishmentRequest(model.inventory.InventoryItem)"},{"p":"controller","c":"InventoryManager","l":"approveReplenishmentRequest(InventoryItem)","u":"approveReplenishmentRequest(model.inventory.InventoryItem)"},{"p":"controller.interfaces","c":"IUserManager","l":"authenticate(String, String)","u":"authenticate(java.lang.String,java.lang.String)"},{"p":"controller","c":"UserManager","l":"authenticate(String, String)","u":"authenticate(java.lang.String,java.lang.String)"},{"p":"controller","c":"AppointmentManager","l":"cancelAppointment(Appointment)","u":"cancelAppointment(model.appointments.Appointment)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"cancelAppointment(Appointment)","u":"cancelAppointment(model.appointments.Appointment)"},{"p":"controller","c":"DoctorManager","l":"clearDoctorAvailability(Doctor, DayOfWeek)","u":"clearDoctorAvailability(model.users.Doctor,java.time.DayOfWeek)"},{"p":"controller.interfaces","c":"IDoctorManager","l":"clearDoctorAvailability(Doctor, DayOfWeek)","u":"clearDoctorAvailability(model.users.Doctor,java.time.DayOfWeek)"},{"p":"controller","c":"DoctorManager","l":"clearDoctorAvailability(Doctor, LocalDate)","u":"clearDoctorAvailability(model.users.Doctor,java.time.LocalDate)"},{"p":"controller.interfaces","c":"IDoctorManager","l":"clearDoctorAvailability(Doctor, LocalDate)","u":"clearDoctorAvailability(model.users.Doctor,java.time.LocalDate)"},{"p":"controller.interfaces","c":"IMedicalRecordManager","l":"createMedicalRecordFromOutcome(Patient, Doctor, AppointmentOutcomeRecord)","u":"createMedicalRecordFromOutcome(model.users.Patient,model.users.Doctor,model.appointments.AppointmentOutcomeRecord)"},{"p":"controller","c":"MedicalRecordManager","l":"createMedicalRecordFromOutcome(Patient, Doctor, AppointmentOutcomeRecord)","u":"createMedicalRecordFromOutcome(model.users.Patient,model.users.Doctor,model.appointments.AppointmentOutcomeRecord)"},{"p":"controller","c":"AppointmentManager","l":"declineAppointment(Appointment)","u":"declineAppointment(model.appointments.Appointment)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"declineAppointment(Appointment)","u":"declineAppointment(model.appointments.Appointment)"},{"p":"controller","c":"InventoryManager","l":"deductStock(InventoryItem, int)","u":"deductStock(model.inventory.InventoryItem,int)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"deductStock(String, int)","u":"deductStock(java.lang.String,int)"},{"p":"controller","c":"InventoryManager","l":"deductStock(String, int)","u":"deductStock(java.lang.String,int)"},{"p":"controller.interfaces","c":"IStaffManager","l":"deleteStaff(User)","u":"deleteStaff(model.users.User)"},{"p":"controller","c":"StaffManager","l":"deleteStaff(User)","u":"deleteStaff(model.users.User)"},{"p":"controller.interfaces","c":"IPharmacistManager","l":"dispense(Prescription)","u":"dispense(model.prescriptions.Prescription)"},{"p":"controller","c":"PharmacistManager","l":"dispense(Prescription)","u":"dispense(model.prescriptions.Prescription)"},{"p":"controller.interfaces","c":"IPharmacistManager","l":"dispensePrescription(Appointment, Prescription)","u":"dispensePrescription(model.appointments.Appointment,model.prescriptions.Prescription)"},{"p":"controller","c":"PharmacistManager","l":"dispensePrescription(Appointment, Prescription)","u":"dispensePrescription(model.appointments.Appointment,model.prescriptions.Prescription)"},{"p":"controller.interfaces","c":"IPharmacistManager","l":"dispensePrescriptions(Appointment)","u":"dispensePrescriptions(model.appointments.Appointment)"},{"p":"controller","c":"PharmacistManager","l":"dispensePrescriptions(Appointment)","u":"dispensePrescriptions(model.appointments.Appointment)"},{"p":"controller","c":"DoctorManager","l":"DoctorManager(IDoctorRepository)","u":"%3Cinit%3E(repository.interfaces.IDoctorRepository)"},{"p":"controller","c":"AppointmentManager","l":"END_HOUR"},{"p":"controller.interfaces","c":"IStaffManager","l":"findStaffByKeywords(String)","u":"findStaffByKeywords(java.lang.String)"},{"p":"controller","c":"StaffManager","l":"findStaffByKeywords(String)","u":"findStaffByKeywords(java.lang.String)"},{"p":"controller","c":"AppointmentManager","l":"generateTimeSlots(LocalDate)","u":"generateTimeSlots(java.time.LocalDate)"},{"p":"controller.interfaces","c":"IUserManager","l":"getActiveUser()"},{"p":"controller","c":"UserManager","l":"getActiveUser()"},{"p":"controller","c":"AppointmentManager","l":"getAllAppointments()"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getAllAppointments()"},{"p":"controller","c":"DoctorManager","l":"getAllDoctors()"},{"p":"controller.interfaces","c":"IDoctorManager","l":"getAllDoctors()"},{"p":"controller.interfaces","c":"IInventoryManager","l":"getAllItems()"},{"p":"controller","c":"InventoryManager","l":"getAllItems()"},{"p":"controller.interfaces","c":"IStaffManager","l":"getAllStaff()"},{"p":"controller","c":"StaffManager","l":"getAllStaff()"},{"p":"controller","c":"AppointmentManager","l":"getAppointments(Doctor)","u":"getAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getAppointments(Doctor)","u":"getAppointments(model.users.Doctor)"},{"p":"controller","c":"AppointmentManager","l":"getAvailableSlotsByDoctor(LocalDate, Doctor)","u":"getAvailableSlotsByDoctor(java.time.LocalDate,model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getAvailableSlotsByDoctor(LocalDate, Doctor)","u":"getAvailableSlotsByDoctor(java.time.LocalDate,model.users.Doctor)"},{"p":"controller","c":"AppointmentManager","l":"getCompletedAppointments(Doctor)","u":"getCompletedAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getCompletedAppointments(Doctor)","u":"getCompletedAppointments(model.users.Doctor)"},{"p":"controller","c":"DoctorManager","l":"getDoctor(String)","u":"getDoctor(java.lang.String)"},{"p":"controller.interfaces","c":"IDoctorManager","l":"getDoctor(String)","u":"getDoctor(java.lang.String)"},{"p":"controller","c":"DoctorManager","l":"getDoctorById(String)","u":"getDoctorById(java.lang.String)"},{"p":"controller","c":"AppointmentManager","l":"getFulfilledAppointments(Doctor)","u":"getFulfilledAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getFulfilledAppointments(Doctor)","u":"getFulfilledAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"getItem(String)","u":"getItem(java.lang.String)"},{"p":"controller","c":"InventoryManager","l":"getItem(String)","u":"getItem(java.lang.String)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"getLowStockInventoryItems()"},{"p":"controller","c":"InventoryManager","l":"getLowStockInventoryItems()"},{"p":"controller","c":"AppointmentManager","l":"getPastAppointments(Doctor)","u":"getPastAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getPastAppointments(Doctor)","u":"getPastAppointments(model.users.Doctor)"},{"p":"controller","c":"AppointmentManager","l":"getPastAppointments(Patient)","u":"getPastAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getPastAppointments(Patient)","u":"getPastAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IPatientManager","l":"getPatient(String)","u":"getPatient(java.lang.String)"},{"p":"controller","c":"PatientManager","l":"getPatient(String)","u":"getPatient(java.lang.String)"},{"p":"controller.interfaces","c":"IPatientManager","l":"getPatientsUnderDoctorCare(Doctor)","u":"getPatientsUnderDoctorCare(model.users.Doctor)"},{"p":"controller","c":"PatientManager","l":"getPatientsUnderDoctorCare(Doctor)","u":"getPatientsUnderDoctorCare(model.users.Doctor)"},{"p":"controller","c":"AppointmentManager","l":"getPendingAppointments(Doctor)","u":"getPendingAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getPendingAppointments(Doctor)","u":"getPendingAppointments(model.users.Doctor)"},{"p":"controller","c":"AppointmentManager","l":"getPendingAppointments(Patient)","u":"getPendingAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getPendingAppointments(Patient)","u":"getPendingAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"getPendingReplenishmentRequestItems()"},{"p":"controller","c":"InventoryManager","l":"getPendingReplenishmentRequestItems()"},{"p":"controller.interfaces","c":"IMedicalRecordManager","l":"getRecords(Patient)","u":"getRecords(model.users.Patient)"},{"p":"controller","c":"MedicalRecordManager","l":"getRecords(Patient)","u":"getRecords(model.users.Patient)"},{"p":"controller","c":"AppointmentManager","l":"getScheduledAppointments(Doctor)","u":"getScheduledAppointments(model.users.Doctor)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getScheduledAppointments(Doctor)","u":"getScheduledAppointments(model.users.Doctor)"},{"p":"controller","c":"AppointmentManager","l":"getScheduledAppointments(Doctor, LocalDate)","u":"getScheduledAppointments(model.users.Doctor,java.time.LocalDate)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getScheduledAppointments(Doctor, LocalDate)","u":"getScheduledAppointments(model.users.Doctor,java.time.LocalDate)"},{"p":"controller","c":"AppointmentManager","l":"getScheduledAppointments(Patient)","u":"getScheduledAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getScheduledAppointments(Patient)","u":"getScheduledAppointments(model.users.Patient)"},{"p":"controller","c":"AppointmentManager","l":"getUndispensedAppointments()"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getUndispensedAppointments()"},{"p":"controller","c":"AppointmentManager","l":"getUpcomingAppointments(Patient)","u":"getUpcomingAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"getUpcomingAppointments(Patient)","u":"getUpcomingAppointments(model.users.Patient)"},{"p":"controller.interfaces","c":"IUserManager","l":"getUser(String)","u":"getUser(java.lang.String)"},{"p":"controller","c":"UserManager","l":"getUser(String)","u":"getUser(java.lang.String)"},{"p":"controller","c":"InventoryManager","l":"InventoryManager(IInventoryRepository)","u":"%3Cinit%3E(repository.interfaces.IInventoryRepository)"},{"p":"controller","c":"StaffManager","l":"isStaff(User)","u":"isStaff(model.users.User)"},{"p":"controller","c":"MedicalRecordManager","l":"MedicalRecordManager(IMedicalRecordRepository, IInventoryRepository)","u":"%3Cinit%3E(repository.interfaces.IMedicalRecordRepository,repository.interfaces.IInventoryRepository)"},{"p":"controller","c":"PatientManager","l":"PatientManager(IPatientRepository, IAppointmentRepository)","u":"%3Cinit%3E(repository.interfaces.IPatientRepository,repository.interfaces.IAppointmentRepository)"},{"p":"controller","c":"PharmacistManager","l":"PharmacistManager(IInventoryRepository, IAppointmentRepository)","u":"%3Cinit%3E(repository.interfaces.IInventoryRepository,repository.interfaces.IAppointmentRepository)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"rejectReplenishmentRequest(InventoryItem)","u":"rejectReplenishmentRequest(model.inventory.InventoryItem)"},{"p":"controller","c":"InventoryManager","l":"rejectReplenishmentRequest(InventoryItem)","u":"rejectReplenishmentRequest(model.inventory.InventoryItem)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"requestReplenishment(Pharmacist, InventoryItem, int)","u":"requestReplenishment(model.users.Pharmacist,model.inventory.InventoryItem,int)"},{"p":"controller","c":"InventoryManager","l":"requestReplenishment(Pharmacist, InventoryItem, int)","u":"requestReplenishment(model.users.Pharmacist,model.inventory.InventoryItem,int)"},{"p":"controller","c":"AppointmentManager","l":"rescheduleAppointment(Appointment, AppointmentSlot)","u":"rescheduleAppointment(model.appointments.Appointment,model.appointments.AppointmentSlot)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"rescheduleAppointment(Appointment, AppointmentSlot)","u":"rescheduleAppointment(model.appointments.Appointment,model.appointments.AppointmentSlot)"},{"p":"controller","c":"AppointmentManager","l":"scheduleAppointment(AppointmentSlot, Patient)","u":"scheduleAppointment(model.appointments.AppointmentSlot,model.users.Patient)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"scheduleAppointment(AppointmentSlot, Patient)","u":"scheduleAppointment(model.appointments.AppointmentSlot,model.users.Patient)"},{"p":"controller","c":"DoctorManager","l":"setDoctorAvailability(Doctor, DayOfWeek, TimePeriod)","u":"setDoctorAvailability(model.users.Doctor,java.time.DayOfWeek,model.availability.TimePeriod)"},{"p":"controller.interfaces","c":"IDoctorManager","l":"setDoctorAvailability(Doctor, DayOfWeek, TimePeriod)","u":"setDoctorAvailability(model.users.Doctor,java.time.DayOfWeek,model.availability.TimePeriod)"},{"p":"controller","c":"DoctorManager","l":"setDoctorAvailability(Doctor, LocalDate, TimePeriod)","u":"setDoctorAvailability(model.users.Doctor,java.time.LocalDate,model.availability.TimePeriod)"},{"p":"controller.interfaces","c":"IDoctorManager","l":"setDoctorAvailability(Doctor, LocalDate, TimePeriod)","u":"setDoctorAvailability(model.users.Doctor,java.time.LocalDate,model.availability.TimePeriod)"},{"p":"controller","c":"AppointmentManager","l":"SLOT_DURATION"},{"p":"controller","c":"StaffManager","l":"StaffManager(IUserRepository)","u":"%3Cinit%3E(repository.interfaces.IUserRepository)"},{"p":"controller","c":"AppointmentManager","l":"START_HOUR"},{"p":"controller","c":"AppointmentManager","l":"updateAppointment(Appointment)","u":"updateAppointment(model.appointments.Appointment)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"updateAppointment(Appointment)","u":"updateAppointment(model.appointments.Appointment)"},{"p":"controller","c":"AppointmentManager","l":"updateAppointmentOutcome(Appointment, String, List<Prescription>, List<MedicalService>)","u":"updateAppointmentOutcome(model.appointments.Appointment,java.lang.String,java.util.List,java.util.List)"},{"p":"controller.interfaces","c":"IAppointmentManager","l":"updateAppointmentOutcome(Appointment, String, List<Prescription>, List<MedicalService>)","u":"updateAppointmentOutcome(model.appointments.Appointment,java.lang.String,java.util.List,java.util.List)"},{"p":"controller.interfaces","c":"IUserManager","l":"updatePassword(User, String)","u":"updatePassword(model.users.User,java.lang.String)"},{"p":"controller","c":"UserManager","l":"updatePassword(User, String)","u":"updatePassword(model.users.User,java.lang.String)"},{"p":"controller.interfaces","c":"IPatientManager","l":"updatePatient(Patient)","u":"updatePatient(model.users.Patient)"},{"p":"controller","c":"PatientManager","l":"updatePatient(Patient)","u":"updatePatient(model.users.Patient)"},{"p":"controller.interfaces","c":"IMedicalRecordManager","l":"updateRecord(MedicalRecordEntry)","u":"updateRecord(model.medrecord.MedicalRecordEntry)"},{"p":"controller","c":"MedicalRecordManager","l":"updateRecord(MedicalRecordEntry)","u":"updateRecord(model.medrecord.MedicalRecordEntry)"},{"p":"controller.interfaces","c":"IStaffManager","l":"updateStaff(User)","u":"updateStaff(model.users.User)"},{"p":"controller","c":"StaffManager","l":"updateStaff(User)","u":"updateStaff(model.users.User)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"updateStock(InventoryItem, int)","u":"updateStock(model.inventory.InventoryItem,int)"},{"p":"controller","c":"InventoryManager","l":"updateStock(InventoryItem, int)","u":"updateStock(model.inventory.InventoryItem,int)"},{"p":"controller.interfaces","c":"IInventoryManager","l":"updateStockLevelAlert(InventoryItem, int)","u":"updateStockLevelAlert(model.inventory.InventoryItem,int)"},{"p":"controller","c":"InventoryManager","l":"updateStockLevelAlert(InventoryItem, int)","u":"updateStockLevelAlert(model.inventory.InventoryItem,int)"},{"p":"controller","c":"UserManager","l":"UserManager(IUserRepository)","u":"%3Cinit%3E(repository.interfaces.IUserRepository)"}];updateSearchResults();